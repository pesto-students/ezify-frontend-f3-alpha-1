{"version":3,"file":"static/js/993.5475c427.chunk.js","mappings":"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","sources":["components/sidebar/sidebar.js","routes/dashboard.routes.js","pages/dashboard/dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./sidebar.scss\";\r\n\r\nimport hamburgerMenu from \"./../../assets/dashboard/hamburger-menu.webp\";\r\nimport personIcon from \"./../../assets/dashboard/personIcon.webp\";\r\nimport serviceIcon from \"./../../assets/dashboard/serviceIcon.webp\";\r\nimport earningsIcon from \"./../../assets/dashboard/earningsIcon.webp\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectUserDetails } from \"../../redux/user/user.selectors\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst Sidebar = ({ userDetails }) => {\r\n  const [toggle, setToggle] = useState(true);\r\n\r\n  let sidebarMenuOptions = [];\r\n\r\n  switch (userDetails.roles) {\r\n    case \"admin\":\r\n      sidebarMenuOptions = [\r\n        {\r\n          label: \"Dashboard\",\r\n          path: \"/dashboard\",\r\n          icon: personIcon,\r\n        },\r\n        {\r\n          label: \"Services\",\r\n          path: \"/dashboard/services\",\r\n          icon: serviceIcon,\r\n        },\r\n        {\r\n          label: \"Vendors\",\r\n          path: \"/dashboard/vendors\",\r\n          icon: personIcon,\r\n        },\r\n      ];\r\n      break;\r\n\r\n    case \"vendor\":\r\n      sidebarMenuOptions = [\r\n        {\r\n          label: \"Dashboard\",\r\n          path: \"/dashboard\",\r\n          icon: personIcon,\r\n        },\r\n        {\r\n          label: \"Bookings\",\r\n          path: \"/dashboard/vendorBookings\",\r\n          icon: serviceIcon,\r\n        },\r\n        {\r\n          label: \"Earnings\",\r\n          path: \"/dashboard/vendorEarnings\",\r\n          icon: earningsIcon,\r\n        },\r\n      ];\r\n      break;\r\n\r\n    default:\r\n      sidebarMenuOptions = [];\r\n      break;\r\n  }\r\n\r\n  const onToggle = () => {\r\n    setToggle(!toggle);\r\n    const sideBar = document.getElementById(\"sidebar\");\r\n\r\n    if (toggle) {\r\n      sideBar.style.width = \"5rem\";\r\n    } else {\r\n      sideBar.style.width = \"15rem\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\" id=\"sidebar\">\r\n      <div className={`sidebar__logo-container d-flex align-items-center ${toggle ? \"justify-content-between\" : \"justify-content-center\"}`}>\r\n        {toggle && (\r\n          <Link to=\"/\">\r\n            <div className=\"sidebar__logo-container--box\">Ezzify</div>\r\n          </Link>\r\n        )}\r\n        <img src={hamburgerMenu} alt=\"hamburgerMenu\" className=\"sidebar__logo-container--toogle-img\" onClick={onToggle} />\r\n      </div>\r\n\r\n      <ul className=\"sidebar__menuList\">\r\n        {sidebarMenuOptions.map((option, index) => (\r\n          <NavLink key={index} to={option.path} exact activeClassName=\"sidebar__menuList--item-selected\" className=\"sidebar__menuList--item\">\r\n            <li className=\"sidebar__menuList--item--li\">\r\n              <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <img src={option.icon} alt=\"Icon\" className={toggle ? \"\" : \"mr-0\"} />\r\n                </div>\r\n                <div className=\"col-9\">{toggle && <span>{option.label}</span>}</div>\r\n              </div>\r\n            </li>\r\n          </NavLink>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  userDetails: selectUserDetails,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Sidebar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { selectUserDetails } from \"../redux/user/user.selectors\";\r\n\r\nimport loadable from \"@loadable/component\";\r\n\r\nimport CustomSpinner from \"./../components/atmoic/spinner\";\r\nimport Sidebar from \"../components/sidebar/sidebar\";\r\nimport Header from \"../components/header/Header\";\r\n\r\nconst LoadableDashboardContainer = loadable(() => import(\"../components/dashboardContainer/dashboardContainer\"), {\r\n  fallback: <CustomSpinner />,\r\n});\r\n\r\nconst LoadableAdminServices = loadable(() => import(\"../components/adminServices/adminServices\"), {\r\n  fallback: <CustomSpinner />,\r\n});\r\n\r\nconst LoadableAdminVendors = loadable(() => import(\"../components/adminVendors\"), {\r\n  fallback: <CustomSpinner />,\r\n});\r\n\r\nconst LoadableVendorBookings = loadable(() => import(\"../components/vendorBookings\"), {\r\n  fallback: <CustomSpinner />,\r\n});\r\n\r\nconst LoadableVendorEarnings = loadable(() => import(\"../components/vendorEarnings\"), {\r\n  fallback: <CustomSpinner />,\r\n});\r\n\r\nconst DashboardRoutes = ({ userDetails }) => {\r\n  const renderComponent = (component, userType) => {\r\n    if (userDetails && userDetails?.isActive && userType.includes(userDetails?.roles)) {\r\n      return component;\r\n    } else {\r\n      return <Redirect to=\"/notAuthPage\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/dashboard\" render={() => renderComponent(<LoadableDashboardContainer />, [\"admin\", \"vendor\"])} />\r\n      <Route exact path=\"/dashboard/services\" render={() => renderComponent(<LoadableAdminServices />, [\"admin\"])} />\r\n      <Route exact path=\"/dashboard/vendors\" render={() => renderComponent(<LoadableAdminVendors />, [\"admin\"])} />\r\n      <Route exact path=\"/dashboard/vendorBookings\" render={() => renderComponent(<LoadableVendorBookings />, [\"vendor\"])} />\r\n      <Route exact path=\"/dashboard/vendorEarnings\" render={() => renderComponent(<LoadableVendorEarnings />, [\"vendor\"])} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  userDetails: selectUserDetails,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DashboardRoutes);\r\n","import React from \"react\";\r\n\r\nimport Header from \"../../components/header/Header\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport DashboardRoutes from \"../../routes/dashboard.routes\";\r\n\r\nimport \"./dashboard.scss\";\r\n\r\nconst Dashboard = () => {\r\n  console.log(\"Dashboard\");\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <Sidebar />\r\n      <div className=\"w-100\">\r\n        <Header showVendorBtn={false} />\r\n        <DashboardRoutes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Dashboard);\r\n"],"names":["mapStateToProps","createStructuredSelector","userDetails","selectUserDetails","connect","useState","toggle","setToggle","sidebarMenuOptions","roles","label","path","icon","personIcon","serviceIcon","earningsIcon","className","id","to","src","hamburgerMenu","alt","onClick","sideBar","document","getElementById","style","width","map","option","index","exact","activeClassName","LoadableDashboardContainer","loadable","fallback","LoadableAdminServices","LoadableAdminVendors","LoadableVendorBookings","LoadableVendorEarnings","renderComponent","component","userType","isActive","includes","Redirect","Switch","Route","render","Dashboard","console","log","Header","showVendorBtn","React"],"sourceRoot":""}