{"version":3,"file":"static/js/782.68124eca.chunk.js","mappings":"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","sources":["components/dashboardBarChart/index.js","components/dashboardCard/index.js","components/dashboardLineChart/index.js","components/dashboardContainer/dashboardContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport CustomButton from \"../atmoic/customButton/customButton\";\r\n\r\nimport \"./dashboardBarChart.scss\";\r\n\r\nconst DashboardBarChart = ({ title, value, btnText, btnLink, xaxis, series, history }) => {\r\n  const btnAttribute = {\r\n    type: \"button\",\r\n    text: btnText,\r\n    classes: \"customButton-ghost cp-4\",\r\n    onClick: () => history.push(btnLink),\r\n  };\r\n\r\n  const chart = {\r\n    options: {\r\n      chart: {\r\n        id: \"column-chart\",\r\n      },\r\n      xaxis,\r\n      markers: {\r\n        size: 5,\r\n      },\r\n      colors: [\"#09b162\"],\r\n    },\r\n    series\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboardBarChart mt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <div className=\"dashboardBarChart__title\">{title}</div>\r\n          <div className=\"dashboardBarChart__value\">{value}</div>\r\n          <CustomButton {...btnAttribute} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <Chart options={chart.options} series={chart.series} type=\"bar\" height=\"400\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(DashboardBarChart);\r\n","import React from \"react\";\r\n\r\nimport \"./dashboardCard.scss\";\r\n\r\nimport earningsIconGreen from \"./../../assets/dashboard/earningsIconGreen.webp\";\r\n\r\nconst DashboardCard = () => {\r\n  return (\r\n    <div className=\"dashboardCard\">\r\n      <div className=\"row\">\r\n        <div className=\"col-3 d-flex align-items-center justify-content-center\">\r\n          <img src={earningsIconGreen} alt=\"Service\" className=\"w-100\" />\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <div className=\"dashboardCard__title\">Total Earnings</div>\r\n          <div className=\"dashboardCard__value\">68K</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardCard;\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport CustomButton from \"../atmoic/customButton/customButton\";\r\n\r\nimport \"./dashboardLineChart.scss\";\r\n\r\nconst DashboardLineChart = ({ title, xaxis, value, btnLink, btnText, series, history }) => {\r\n  const btnAttribute = {\r\n    type: \"button\",\r\n    text: btnText,\r\n    classes: \"customButton-ghost cp-4\",\r\n    onClick: () => history.push(btnLink),\r\n  };\r\n\r\n  const chart = {\r\n    options: {\r\n      chart: {\r\n        id: \"line-chart\",\r\n      },\r\n      xaxis,\r\n      markers: {\r\n        size: 5,\r\n      },\r\n      colors: [\"#09b162\"],\r\n    },\r\n    series,\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboardLineChart mt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <div className=\"dashboardLineChart__title\">{title}</div>\r\n          <div className=\"dashboardLineChart__value\">{value}</div>\r\n          <CustomButton {...btnAttribute} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <Chart options={chart.options} series={chart.series} type=\"line\" height=\"400\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(DashboardLineChart);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport DashboardBarChart from \"../dashboardBarChart\";\r\nimport DashboardCard from \"../dashboardCard\";\r\nimport DashboardLineChart from \"../dashboardLineChart\";\r\nimport { selectToken, selectUserDetails } from \"../../redux/user/user.selectors\";\r\n\r\nimport \"./dashboardContainer.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { ApiCallsContext } from \"../../services/api.service\";\r\nimport { catchHandler } from \"../../utlis/catchHandler.utlis\";\r\nimport { API_URLS } from \"../../utlis/constants\";\r\n\r\nconst DashboardContainer = ({ userDetails, token }) => {\r\n  const role = userDetails.roles;\r\n  const ApiContext = useContext(ApiCallsContext);\r\n  let days = [];\r\n\r\n  const [lineChartConfigs, setLineChartConfigs] = useState({\r\n    title: role === \"vendor\" ? \"Earnings\" : \"Vendors\",\r\n    value: role === \"vendor\" ? \"INR 0\" : \"0\",\r\n    btnText: role === \"vendor\" ? \"Open Earnings\" : \"Open Vendors\",\r\n    btnLink: role === \"vendor\" ? \"/dashboard/vendorEarnings\" : \"/dashboard/vendors\",\r\n    xaxis: {\r\n      categories: days,\r\n    },\r\n    series: [],\r\n  });\r\n\r\n  const [barGraphConfig, setBarGraphConfig] = useState({\r\n    title: \"Bookings\",\r\n    value: \"0\",\r\n    btnText: \"Open Bookings\",\r\n    btnLink: \"/dashboard/vendorBookings\",\r\n    xaxis: {\r\n      categories: days,\r\n    },\r\n    series: [],\r\n  });\r\n\r\n  const last7days = () => {\r\n    for (let i = 6; i >= 0; i--) {\r\n      const dateFrom = moment().subtract(i, \"d\").format(\"DD MMM, YYYY\");\r\n      days.push(dateFrom);\r\n    }\r\n\r\n    setLineChartConfigs({\r\n      title: role === \"vendor\" ? \"Earnings\" : \"Vendors\",\r\n      value: role === \"vendor\" ? \"INR 0\" : \"0\",\r\n      btnText: role === \"vendor\" ? \"Open Earnings\" : \"Open Vendors\",\r\n      btnLink: role === \"vendor\" ? \"/dashboard/vendorEarnings\" : \"/dashboard/vendors\",\r\n      xaxis: {\r\n        categories: days,\r\n      },\r\n      series: [],\r\n    });\r\n  };\r\n\r\n  const generateLinechartSeries = (data) => {\r\n    if (Array.isArray(data) && data.length > 0) {\r\n      let seriesData = [0, 0, 0, 0, 0, 0, 0];\r\n      let totalValue = 0;\r\n\r\n      if (userDetails.roles === \"vendor\") {\r\n        data.forEach((series) => {\r\n          totalValue += series.baseprice;\r\n          const date = moment(series.createdAt).format(\"DD MMM, YYYY\");\r\n          const index = days.findIndex((val) => val === date);\r\n          seriesData[index] += series.baseprice;\r\n        });\r\n      } else if (userDetails.roles === \"admin\") {\r\n        let obj = {};\r\n        data.forEach((series) => {\r\n          const date = moment(series.createdAt).format(\"DD MMM, YYYY\");\r\n          const index = days.findIndex((val) => val === date);\r\n\r\n          if (obj.hasOwnProperty(date)) {\r\n            obj[date] += 1;\r\n          } else {\r\n            obj[date] = 1;\r\n          }\r\n\r\n          seriesData[index] = obj[date];\r\n        });\r\n      }\r\n\r\n      setLineChartConfigs({\r\n        title: role === \"vendor\" ? \"Earnings\" : \"Vendors\",\r\n        value: role === \"vendor\" ? `INR ${totalValue}` : data.length,\r\n        btnText: role === \"vendor\" ? \"Open Earnings\" : \"Open Vendors\",\r\n        btnLink: role === \"vendor\" ? \"/dashboard/vendorEarnings\" : \"/dashboard/vendors\",\r\n        xaxis: {\r\n          categories: days,\r\n        },\r\n        series: [\r\n          {\r\n            name: userDetails.roles === \"vendor\" ? \"Earnings\" : \"Vendors\",\r\n            data: seriesData,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchLineChartData = async () => {\r\n    const response = await catchHandler(fetchLineChartDataAPI);\r\n    generateLinechartSeries(response);\r\n  };\r\n\r\n  const fetchLineChartDataAPI = async () => {\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n\r\n    if (userDetails.roles === \"vendor\") {\r\n      const data = await ApiContext.getData(API_URLS.VIEW_ALL_EARNINGS, { headers });\r\n      return data;\r\n    } else if (userDetails.roles === \"admin\") {\r\n      const data = await ApiContext.getData(API_URLS.FETCH_ALL_VENDORS, { headers });\r\n      return data;\r\n    }\r\n  };\r\n\r\n  const generateBarGraphSeries = (data) => {\r\n    if (Array.isArray(data) && data.length > 0) {\r\n      let seriesData = [0, 0, 0, 0, 0, 0, 0];\r\n\r\n      if (userDetails.roles === \"vendor\") {\r\n        let obj = {};\r\n\r\n        data.forEach((series, i) => {\r\n          const date = moment(series.createdAt).format(\"DD MMM, YYYY\");\r\n          const index = days.findIndex((val) => val === date);\r\n\r\n          if (obj.hasOwnProperty(date)) {\r\n            obj[date] += 1;\r\n          } else {\r\n            obj[date] = 1;\r\n          }\r\n\r\n          seriesData[index] = obj[date];\r\n        });\r\n      }\r\n\r\n      setBarGraphConfig({\r\n        title: \"Bookings\",\r\n        value: data.length,\r\n        btnText: \"Open Bookings\",\r\n        btnLink: \"/dashboard/vendorBookings\",\r\n        xaxis: {\r\n          categories: days,\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Bookings\",\r\n            data: seriesData,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchBarGraphData = async () => {\r\n    const response = await catchHandler(fetchBarGraphDataAPI);\r\n    generateBarGraphSeries(response);\r\n  };\r\n\r\n  const fetchBarGraphDataAPI = async () => {\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n\r\n    if (userDetails.roles === \"vendor\") {\r\n      const data = await ApiContext.getData(API_URLS.FETCH_VENDOR_BOOKINGS, { headers });\r\n      return data;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    last7days();\r\n    fetchLineChartData();\r\n    fetchBarGraphData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboardContainer container\">\r\n      <h2 className=\"dashboardContainer__greetings\">Hello {userDetails.firstName},</h2>\r\n\r\n      <div className=\"d-flex align-items-center justify-content-start mt-4\">\r\n        <DashboardCard />\r\n        <DashboardCard />\r\n        <DashboardCard />\r\n      </div>\r\n\r\n      <DashboardLineChart {...lineChartConfigs} />\r\n      {userDetails.roles === \"vendor\" && <DashboardBarChart {...barGraphConfig} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken,\r\n  userDetails: selectUserDetails,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DashboardContainer);\r\n"],"names":["withRouter","title","value","btnText","btnLink","xaxis","series","history","btnAttribute","type","text","classes","onClick","push","chart","options","id","markers","size","colors","className","height","src","earningsIconGreen","alt","mapStateToProps","createStructuredSelector","token","selectToken","userDetails","selectUserDetails","connect","role","roles","ApiContext","useContext","ApiCallsContext","days","useState","categories","lineChartConfigs","setLineChartConfigs","barGraphConfig","setBarGraphConfig","generateLinechartSeries","data","Array","isArray","length","seriesData","totalValue","forEach","baseprice","date","moment","createdAt","format","index","findIndex","val","obj","hasOwnProperty","name","fetchLineChartData","catchHandler","fetchLineChartDataAPI","response","headers","Authorization","getData","API_URLS","generateBarGraphSeries","i","fetchBarGraphData","fetchBarGraphDataAPI","useEffect","dateFrom","subtract","last7days","firstName"],"sourceRoot":""}