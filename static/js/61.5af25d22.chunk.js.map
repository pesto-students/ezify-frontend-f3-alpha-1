{"version":3,"file":"static/js/61.5af25d22.chunk.js","mappings":"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","sources":["components/vendorTile/vendorTile.js","components/cart/index.js","pages/services/services.js","redux/cart/cart.actions.js","redux/cart/cart.selectors.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./vendorTile.scss\";\r\n\r\nimport CustomButton from \"../atmoic/customButton/customButton\";\r\n\r\nimport rupee from \"./../../assets/service_page/rupee.webp\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCartItems, selectCartItemsServices, selectCartItemsVendors } from \"../../redux/cart/cart.selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeFromCart, setItemToCart } from \"../../redux/cart/cart.actions\";\r\nimport ModalBase from \"../atmoic/modal/modal\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { selectUserDetails } from \"../../redux/user/user.selectors\";\r\n\r\nconst VendorTile = ({\r\n  profileImage,\r\n  firstName,\r\n  lastName,\r\n  serviceId,\r\n  services,\r\n  _id,\r\n  cartItems,\r\n  addItemToCart,\r\n  removeItemFromCart,\r\n  serviceName,\r\n  availabaleDate,\r\n  availableTime,\r\n  userDetails,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [message, setMessage] = useState(\"You can not add multiple vendors for the same service\");\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const selectedService = services.find((service) => service.serviceID === serviceId);\r\n\r\n  const handleBookNow = () => {\r\n    if (userDetails?.roles === \"vendor\" || userDetails?.roles === \"admin\") {\r\n      setShow(true);\r\n      setMessage(\"Vendor can not add another vendor\");\r\n      return;\r\n    }\r\n\r\n    addItemToCart({\r\n      vendorID: _id,\r\n      serviceID: serviceId,\r\n      active: true,\r\n      profileImage,\r\n      firstName,\r\n      lastName,\r\n      serviceName,\r\n      basePrice: selectedService.basePrice,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setbtnAttributes({\r\n      type: \"button\",\r\n      text: \"BOOK NOW\",\r\n      onClick: handleBookNow,\r\n    });\r\n    removeItemFromCart(serviceId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    cartItems.forEach((item, index) => {\r\n      if (item.serviceID === serviceId && item.vendorID === _id) {\r\n        setbtnAttributes({\r\n          type: \"button\",\r\n          text: \"CANCEL\",\r\n          onClick: handleCancel,\r\n        });\r\n\r\n        if (btnAttributes.text === \"CANCEL\") {\r\n          setShow(true);\r\n          setMessage(\"You can not add multiple vendors for the same service\");\r\n        }\r\n      }\r\n    });\r\n  }, [cartItems]);\r\n\r\n  const [btnAttributes, setbtnAttributes] = useState({\r\n    type: \"button\",\r\n    text: \"BOOK NOW\",\r\n    onClick: handleBookNow,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row vendorTile mb-2\">\r\n        <div className=\"col-2 d-flex align-items-center justify-content-center\">\r\n          <img src={profileImage} alt=\"Vendor Profile\" className=\"h-100 w-100 vendorTile__profile\" />\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <div className=\"d-flex align-items-center justify-content-between vendorTile__nameRatings\">\r\n            <div className=\"vendorTile__name\">\r\n              {firstName} {lastName}\r\n            </div>\r\n            {/* <div className=\"d-flex align-items-center justify-content-between vendorTile__ratings\">\r\n              <img src={ratingStar} alt=\"Rating\" />\r\n              <span>4.99</span>\r\n            </div> */}\r\n          </div>\r\n          <div className=\"vendorTile__timing\">\r\n            <div>{availabaleDate}</div>\r\n            <div>{availableTime}</div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center justify-content-between vendorTile__pricing\">\r\n            <img src={rupee} alt=\"Rupee Symbol\" />\r\n            <span>{selectedService.basePrice} Rs.</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-3 offset-2 d-flex align-items-center justify-content-center\">\r\n          <CustomButton {...btnAttributes} />\r\n        </div>\r\n      </div>\r\n\r\n      <ModalBase show={show} handleClose={handleClose} handleShow={handleShow} size=\"md\">\r\n        <Modal.Header closeButton>ðŸ’¥ Warning</Modal.Header>\r\n        <Modal.Body>\r\n          <p className=\"mb-0 text-center font-weight-bold\">{message}</p>\r\n        </Modal.Body>\r\n      </ModalBase>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  cartItemsVendors: selectCartItemsVendors,\r\n  cartItemsService: selectCartItemsServices,\r\n  userDetails: selectUserDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItemToCart: (item) => dispatch(setItemToCart(item)),\r\n  removeItemFromCart: (serviceID) => dispatch(removeFromCart(serviceID)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VendorTile);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport \"./cart.scss\";\r\n\r\nconst Cart = ({ cartItems }) => {\r\n  return (\r\n    <Link to=\"/payment\" className=\"cart d-flex align-items-center justify-content-between\">\r\n      <div>Services</div>\r\n      <div>{cartItems.length}</div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport \"./services.scss\";\r\n\r\nimport bannerPic from \"./../../assets/service_page/banner-1.webp\";\r\nimport VendorTile from \"../../components/vendorTile/vendorTile\";\r\nimport { catchHandler } from \"./../../utlis/catchHandler.utlis\";\r\nimport { ApiCallsContext } from \"../../services/api.service\";\r\nimport { API_URLS } from \"../../utlis/constants\";\r\nimport Cart from \"../../components/cart\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Services = ({ cartItems }) => {\r\n  const ApiContext = useContext(ApiCallsContext);\r\n  const { name, serviceId, city } = useParams();\r\n\r\n  const [vendors, setVendors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchVendors();\r\n  }, [serviceId]);\r\n\r\n  const fetchVendors = async () => {\r\n    const response = await catchHandler(fetchServicesAPI);\r\n    setVendors(response);\r\n  };\r\n\r\n  const fetchServicesAPI = async () => {\r\n    const postObj = {\r\n      serviceID: serviceId,\r\n      city,\r\n    };\r\n\r\n    const data = await ApiContext.postData(API_URLS.FETCH_VENDORS, postObj);\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"services\">\r\n        <div className=\"services__banner\">\r\n          <img src={bannerPic} alt=\"Banner\" />\r\n          <h2 className=\"services__banner--text\">{name} Services</h2>\r\n        </div>\r\n        <div className=\"services__listing-container container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <div className=\"services__filter-box services__filter-box--1\">\r\n                <div className=\"services__filter-box--title\">Sort By</div>\r\n                <div className=\"services__filter-box--options\">Price: High to Low</div>\r\n                <div className=\"services__filter-box--options\">Price: Low to High</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              {vendors.length > 0 &&\r\n                vendors.map((vendor, index) => <VendorTile key={index} {...vendor} serviceId={serviceId} serviceName={name} cartItems={cartItems} />)}\r\n              {vendors.length <= 0 && <h2 className=\"text-center\">Sorry, No vendor found</h2>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {cartItems.length > 0 && <Cart />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Services);\r\n","import { CartActionTypes } from \"./cart.types\";\r\n\r\nexport const setItemToCart = (payload) => ({\r\n  type: CartActionTypes.SET_ITEM_TO_CART,\r\n  payload: payload,\r\n});\r\nexport const removeFromCart = (payload) => ({\r\n  type: CartActionTypes.REMOVE_ITEM_FROM_CART,\r\n  payload: payload,\r\n});\r\nexport const disableFromCart = (payload) => ({\r\n  type: CartActionTypes.DISABLE_ITEM_FROM_CART,\r\n  payload: payload,\r\n});\r\nexport const emptyCart = () => ({\r\n  type: CartActionTypes.EMPTY_CART,\r\n});\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectCart = (state) => state.cart;\r\n\r\nexport const selectCartItems = createSelector([selectCart], (cart) => cart.items);\r\n\r\nexport const selectCartItemsIds = createSelector([selectCartItems], (items) => items.map((item) => item.id));\r\n\r\nexport const selectCartItemsVendors = createSelector([selectCartItems], (items) => items.map((item) => item.vendorID));\r\n\r\nexport const selectCartItemsServices = createSelector([selectCartItems], (items) => items.map((item) => item.serviceID));\r\n\r\nexport const selectCartTotal = createSelector([selectCartItems], (items) => {\r\n  let total = 0;\r\n  items.map((item) => {\r\n    if (item.active) {\r\n      total += item.basePrice;\r\n    }\r\n  });\r\n  return total;\r\n});\r\n"],"names":["mapStateToProps","createStructuredSelector","cartItems","selectCartItems","cartItemsVendors","selectCartItemsVendors","cartItemsService","selectCartItemsServices","userDetails","selectUserDetails","connect","dispatch","addItemToCart","item","setItemToCart","removeItemFromCart","serviceID","removeFromCart","profileImage","firstName","lastName","serviceId","services","_id","serviceName","availabaleDate","availableTime","useState","show","setShow","message","setMessage","selectedService","find","service","handleBookNow","roles","vendorID","active","basePrice","handleCancel","setbtnAttributes","type","text","onClick","useEffect","forEach","index","btnAttributes","className","src","alt","rupee","handleClose","handleShow","size","Modal","closeButton","to","length","ApiContext","useContext","ApiCallsContext","useParams","name","city","vendors","setVendors","fetchVendors","catchHandler","fetchServicesAPI","response","postObj","postData","API_URLS","data","bannerPic","map","vendor","payload","CartActionTypes","disableFromCart","emptyCart","createSelector","state","cart","items","id","selectCartTotal","total"],"sourceRoot":""}